[{"/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/index.tsx":"1","/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/cache.ts":"2","/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/reportWebVitals.ts":"3","/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/App.tsx":"4","/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/components/coins.tsx":"5","/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/components/info.tsx":"6"},{"size":1020,"mtime":1658754358290,"results":"7","hashOfConfig":"8"},{"size":108,"mtime":1658753833557,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1658753833557,"results":"10","hashOfConfig":"8"},{"size":336,"mtime":1658753833556,"results":"11","hashOfConfig":"8"},{"size":3866,"mtime":1658823018327,"results":"12","hashOfConfig":"8"},{"size":1955,"mtime":1658822912594,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"xhv51c",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},"/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/index.tsx",[],[],[],"/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/cache.ts",[],[],"/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/reportWebVitals.ts",[],[],"/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/App.tsx",["37","38"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CoinList from './components/coins';\nimport Info from './components/coins';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <CoinList></CoinList>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/components/coins.tsx",["39","40","41","42","43"],[],"import React, { useEffect, useState } from \"react\";\nimport { Button, Heading, Box, Spacer, Wrap, Grid} from \"@chakra-ui/react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from \"@apollo/client\";\nimport DisplayCard from \"./info\";\nimport { isVisible } from \"@testing-library/user-event/dist/utils\";\n\n//Creating a query\nconst CoinList = () => {\n\n  const COINS = gql`\n    query coins {\n      coins {\n        id\n        symbol\n        name\n        price_usd\n        price_btc\n        percent_change_24h\n        market_cap_usd\n        rank\n      }\n    }\n  `;\n\nconst STORAGE_KEY = \"hiddenItemsKey\";\nvar storedIds = JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\");\n\nconst { loading, error, data } = useQuery(COINS);\nconst [infoVisible,setInfoVisible] = useState(false);\nconst [hiddenItems, setHiddenItems] = useState<Array<number>>(storedIds)\n\n//defining functions for display or making data invisible\nconst handleShowButton = () =>{\n  setInfoVisible(true)\n\n}\n\nconst handleHideButton = () =>{\n  setInfoVisible(false)\n}\n\nconst handleHideRow = (id: number) =>{\n  setHiddenItems([...hiddenItems, id]); \n}\nconst handleShowRow = () => {\n  setHiddenItems([]);\n}\n//useEffect to persist data to local storage\nuseEffect(() => {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(hiddenItems));\n}, [hiddenItems])\n\n// Try to avoide declaring a component inside another component or container.\n// Reason for this is that the component will be 'recreated' every time the wrapping component is rendered.\n\n//LoadCoins function responsible for displaying all the Coins queried\nconst LoadCoins = () => {\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :</p>;\n\n    return data.coins.map(\n      ({id, symbol, name, price_usd, rank, price_btc, percent_change_24h, market_cap_usd}: { id: number; symbol: string; name: string, price_usd:string, rank: number,price_btc:string,  percent_change_24h:string,market_cap_usd:string}) => {\n        if(!hiddenItems.includes(id)) {\n            \n            return (\n              <div key={id}>\n                <Wrap>\n                  <Box\n                    bg=\"dark\"\n                    w=\"100%\"\n                    p={5}\n                    color=\"white\"\n                    borderWidth=\"1px\"\n                    borderRadius=\"lg\"\n                    display=\"flex\"\n                    mt=\"2\"\n                    justifyContent=\"center\"\n                    >\n                    <Grid>\n                    <p>\n                      {symbol}: {name}\n                    </p>\n                    {<Box display=\"flex\" alignItems=\"center\" pl= \"1\">\n                      <DisplayCard isVisible= {infoVisible} name={name} symbol = {symbol} price_btc = {price_btc} price_usd= {price_usd} percent_change_24h={percent_change_24h} market_cap_usd={market_cap_usd}/>\n                    </Box>}\n                    <Spacer />\n                    <Box display=\"box\">\n                      <Button onClick={handleShowButton}colorScheme=\"red\" mt=\"2\" ml=\"2\">\n                        Info\n                      </Button>\n                      <Button onClick={handleHideButton} colorScheme=\"yellow\" mt=\"2\" ml=\"2\">\n                        Hide-info\n                      </Button>\n                      <Button onClick={() => handleHideRow(id)} colorScheme=\"yellow\" mt=\"2\" ml=\"2\">\n                        Hide Row\n                      </Button>\n                    </Box>\n                    </Grid>\n                  </Box>\n                </Wrap>\n              </div>\n            )\n        }\n      } \n    );\n  };\n  \n  return (\n    <div>\n      <Heading p={7} >Graduate Crypto Loader</Heading>\n      <Spacer />\n      {!loading && <Box><Button colorScheme=\"red\" mb= \"3\" ml=\"2\" onClick={handleShowRow}>Show hidden coins</Button></Box>}\n      {LoadCoins()}\n    </div>\n  );\n};\n\nexport default CoinList;\n","/Users/joshualeighton/Downloads/graduate/graduatecoins/clients/src/components/info.tsx",["44","45","46","47","48","49","50"],[],"import React, { useState } from \"react\";\nimport { Box, Spacer, Badge, Center } from \"@chakra-ui/react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from \"@apollo/client\";\n  //declaring props for DisplayCard function\n  type DisplayCardProps = {\n    symbol:string\n    name: string\n    price_usd:string\n    price_btc:string\n    percent_change_24h:string\n    market_cap_usd:string\n    isVisible:boolean\n  }\n \n   // pass props into the function and render if boolean is set to true\n   const DisplayCard:React.FC<DisplayCardProps> = ({symbol, name, price_usd,price_btc,percent_change_24h,market_cap_usd,isVisible}) => {\n   \n    return isVisible?(<Center alignItems=\"center\">\n     <Box\n        maxW=\"sm\"\n        borderWidth=\"1px\"\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n        p={4}\n        m={3}\n      >\n       <Box p=\"3\">\n          <Box display=\"flex\" alignItems=\"baseline\">\n            <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n              {symbol}\n            </Badge>\n            <Box\n              color=\"gray.500\"\n              fontWeight=\"semibold\"\n              letterSpacing=\"wide\"\n              fontSize=\"xs\"\n              textTransform=\"uppercase\"\n              ml=\"2\"\n            >\n              USD:{price_usd} &bull; BTC{price_btc} \n            </Box>\n          </Box>\n\n          <Box\n            mt=\"1\"\n            fontWeight=\"semibold\"\n            as=\"h4\"\n            lineHeight=\"tight\"\n          >\n            {name}\n          </Box>\n\n          <Box>\n            {percent_change_24h}\n            <Box\n             as=\"span\" \n             color=\"gray.600\" \n             fontSize=\"sm\"\n             >\n              / 24h Change\n            </Box>\n          </Box>\n\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n          Market Cap: {market_cap_usd} \n          </Box>\n        </Box>\n      </Box>\n      </Center>\n    ):(<></>);\n   }\n   \n\n\nexport default DisplayCard;",[],{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":12},{"ruleId":"51","severity":1,"message":"56","line":4,"column":3,"nodeType":"53","messageId":"54","endLine":4,"endColumn":15},{"ruleId":"51","severity":1,"message":"57","line":5,"column":3,"nodeType":"53","messageId":"54","endLine":5,"endColumn":16},{"ruleId":"51","severity":1,"message":"58","line":6,"column":3,"nodeType":"53","messageId":"54","endLine":6,"endColumn":17},{"ruleId":"51","severity":1,"message":"59","line":11,"column":10,"nodeType":"53","messageId":"54","endLine":11,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":68,"column":236,"nodeType":"62","messageId":"63","endLine":68,"endColumn":238},{"ruleId":"51","severity":1,"message":"64","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"65","line":2,"column":15,"nodeType":"53","messageId":"54","endLine":2,"endColumn":21},{"ruleId":"51","severity":1,"message":"56","line":4,"column":3,"nodeType":"53","messageId":"54","endLine":4,"endColumn":15},{"ruleId":"51","severity":1,"message":"57","line":5,"column":3,"nodeType":"53","messageId":"54","endLine":5,"endColumn":16},{"ruleId":"51","severity":1,"message":"58","line":6,"column":3,"nodeType":"53","messageId":"54","endLine":6,"endColumn":17},{"ruleId":"51","severity":1,"message":"66","line":7,"column":3,"nodeType":"53","messageId":"54","endLine":7,"endColumn":11},{"ruleId":"51","severity":1,"message":"67","line":8,"column":3,"nodeType":"53","messageId":"54","endLine":8,"endColumn":6},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Info' is defined but never used.","'ApolloClient' is defined but never used.","'InMemoryCache' is defined but never used.","'ApolloProvider' is defined but never used.","'isVisible' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'Spacer' is defined but never used.","'useQuery' is defined but never used.","'gql' is defined but never used."]